链接：https://leetcode.com/problems/minimum-depth-of-binary-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
 详细讨论版：
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root == NULL)
            return 0;
        else if(root->left == NULL && root->right == NULL)
            return 1;
        else if(root->left == NULL && root->right != NULL)
            return 1 + minDepth(root->right);
        else if(root->right == NULL && root->left != NULL)
            return 1 + minDepth(root->left);
        else
            return 1 + min(minDepth(root->right), minDepth(root->left));
    }
};

简洁版：
class Solution {
public:
    int minDepth(TreeNode* root) {
        if(root == NULL)
            return 0;
        
        if(root->left == NULL)
            return 1 + minDepth(root->right);
        else if(root->right == NULL)
            return 1 + minDepth(root->left);
        else
            return 1 + min(minDepth(root->right), minDepth(root->left));
    }
};
